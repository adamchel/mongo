Import("env")

env = env.Clone()
env.Append(CPPDEFINES=[ "U_CHARSET_ISUTF8=1", 
                        "U_NO_DEFAULT_INCLUDE_UTF_HEADERS=1",
                        "U_STATIC_IMPLEMENTATION=1"],
           CPPPATH=["source/common"])

def removeIfPresent(lst, item):
    try:
        lst.remove(item)
    except ValueError:
        pass

for to_remove in ['-Werror', '-Wall', '-W']:
    removeIfPresent(env['CCFLAGS'], to_remove)


# libicuuc (common library)
uc_env = env.Clone()
uc_env.Append(CPPDEFINES=["U_COMMON_IMPLEMENTATION=1"])

uc_files = ["source/common/errorcode.cpp", "source/common/putil.cpp", "source/common/umath.c", 
"source/common/utypes.c", "source/common/uinvchar.c", "source/common/umutex.cpp", 
"source/common/ucln_cmn.cpp", "source/common/uinit.cpp", "source/common/uobject.cpp", 
"source/common/cmemory.c", "source/common/charstr.cpp", "source/common/udata.cpp", 
"source/common/ucmndata.c", "source/common/udatamem.c", "source/common/umapfile.c", 
"source/common/udataswp.c", "source/common/ucol_swp.cpp", "source/common/utrace.c", 
"source/common/uhash.c", "source/common/uhash_us.cpp", "source/common/uenum.c", 
"source/common/ustrenum.cpp", "source/common/uvector.cpp", "source/common/ustack.cpp", 
"source/common/uvectr32.cpp", "source/common/uvectr64.cpp", "source/common/ucnv.c", 
"source/common/ucnv_bld.cpp", "source/common/ucnv_cnv.c", "source/common/ucnv_io.cpp", 
"source/common/ucnv_cb.c", "source/common/ucnv_err.c", "source/common/ucnvlat1.c", 
"source/common/ucnv_u7.c", "source/common/ucnv_u8.c", "source/common/ucnv_u16.c", 
"source/common/ucnv_u32.c", "source/common/ucnvscsu.c", "source/common/ucnvbocu.cpp", 
"source/common/ucnv_ext.cpp", "source/common/ucnvmbcs.cpp", "source/common/ucnv2022.cpp", 
"source/common/ucnvhz.c", "source/common/ucnv_lmb.c", "source/common/ucnvisci.c", 
"source/common/ucnvdisp.c", "source/common/ucnv_set.c", "source/common/ucnv_ct.c", 
"source/common/uresbund.cpp", "source/common/ures_cnv.c", "source/common/uresdata.c", 
"source/common/resbund.cpp", "source/common/resbund_cnv.cpp", "source/common/messagepattern.cpp", 
"source/common/ucat.c", "source/common/locmap.c", "source/common/uloc.cpp", 
"source/common/locid.cpp", "source/common/locutil.cpp", "source/common/locavailable.cpp", 
"source/common/locdispnames.cpp", "source/common/loclikely.cpp", "source/common/locresdata.cpp", 
"source/common/bytestream.cpp", "source/common/stringpiece.cpp", "source/common/stringtriebuilder.cpp", 
"source/common/bytestriebuilder.cpp", "source/common/bytestrie.cpp", "source/common/bytestrieiterator.cpp", 
"source/common/ucharstrie.cpp", "source/common/ucharstriebuilder.cpp", "source/common/ucharstrieiterator.cpp", 
"source/common/dictionarydata.cpp", "source/common/appendable.cpp", "source/common/ustr_cnv.cpp", 
"source/common/unistr_cnv.cpp", "source/common/unistr.cpp", "source/common/unistr_case.cpp", 
"source/common/unistr_props.cpp", "source/common/utf_impl.c", "source/common/ustring.cpp", 
"source/common/ustrcase.cpp", "source/common/ucasemap.cpp", "source/common/ucasemap_titlecase_brkiter.cpp", 
"source/common/cstring.c", "source/common/ustrfmt.c", "source/common/ustrtrns.cpp", 
"source/common/ustr_wcs.cpp", "source/common/utext.cpp", "source/common/unistr_case_locale.cpp", 
"source/common/ustrcase_locale.cpp", "source/common/unistr_titlecase_brkiter.cpp", "source/common/ustr_titlecase_brkiter.cpp", 
"source/common/normalizer2impl.cpp", "source/common/normalizer2.cpp", "source/common/filterednormalizer2.cpp", 
"source/common/normlzr.cpp", "source/common/unorm.cpp", "source/common/unormcmp.cpp", 
"source/common/loadednormalizer2impl.cpp", "source/common/chariter.cpp", "source/common/schriter.cpp", 
"source/common/uchriter.cpp", "source/common/uiter.cpp", "source/common/patternprops.cpp", 
"source/common/uchar.c", "source/common/uprops.cpp", "source/common/ucase.cpp", 
"source/common/propname.cpp", "source/common/ubidi_props.c", "source/common/ubidi.c", 
"source/common/ubidiwrt.c", "source/common/ubidiln.c", "source/common/ushape.cpp", 
"source/common/uscript.c", "source/common/uscript_props.cpp", "source/common/usc_impl.c", 
"source/common/unames.cpp", "source/common/utrie.cpp", "source/common/utrie2.cpp", 
"source/common/utrie2_builder.cpp", "source/common/bmpset.cpp", "source/common/unisetspan.cpp", 
"source/common/uset_props.cpp", "source/common/uniset_props.cpp", "source/common/uniset_closure.cpp", 
"source/common/uset.cpp", "source/common/uniset.cpp", "source/common/usetiter.cpp", 
"source/common/ruleiter.cpp", "source/common/caniter.cpp", "source/common/unifilt.cpp", 
"source/common/unifunct.cpp", "source/common/uarrsort.c", "source/common/brkiter.cpp", 
"source/common/ubrk.cpp", "source/common/brkeng.cpp", "source/common/dictbe.cpp", 
"source/common/rbbi.cpp", "source/common/rbbidata.cpp", "source/common/rbbinode.cpp", 
"source/common/rbbirb.cpp", "source/common/rbbiscan.cpp", "source/common/rbbisetb.cpp", 
"source/common/rbbistbl.cpp", "source/common/rbbitblb.cpp", "source/common/serv.cpp", 
"source/common/servnotf.cpp", "source/common/servls.cpp", "source/common/servlk.cpp", 
"source/common/servlkf.cpp", "source/common/servrbf.cpp", "source/common/servslkf.cpp", 
"source/common/uidna.cpp", "source/common/usprep.cpp", "source/common/uts46.cpp", 
"source/common/punycode.cpp", "source/common/util.cpp", "source/common/util_props.cpp", 
"source/common/parsepos.cpp", "source/common/locbased.cpp", "source/common/cwchar.c", 
"source/common/wintz.c", "source/common/dtintrv.cpp", "source/common/ucnvsel.cpp", 
"source/common/propsvec.c", "source/common/ulist.c", "source/common/uloc_tag.c", 
"source/common/icudataver.c", "source/common/icuplug.cpp", "source/common/listformatter.cpp", 
"source/common/ulistformatter.cpp", "source/common/sharedobject.cpp", "source/common/simplepatternformatter.cpp", 
"source/common/unifiedcache.cpp", "source/common/uloc_keytype.cpp"]

uc_env.Library(target="icu-uc", source=uc_files)

# libicudata.a (ICU data)
data_env = env.Clone()

if env.TargetOSIs('osx'):
    platform_macro = "OSX"
elif env.TargetOSIs('linux'):
    platform_macro = "LINUX"

if not env.TargetOSIs('windows'):
    # Use the handcrafted icudt55l_dat.S to build a platform specific icudt_dat.S
    data_env.Command("icudt_dat.S", "icudt55l_dat.S", "cpp -D" + platform_macro + " $SOURCE $TARGET")
    data_env.Library(target="icu-data", source=["icudt_dat.S"])
else:
    # Generate the stubdata library and link to it, rather than the static data
    # On Windows, ICU data must be loaded through a DAT file embedded in a resource to avoid using a DLL
    env.RES('data.rc')
    data_env.Library(target="icu-data", source=["source/stubdata/stubdata.c", "data.res"])



# libicustubdata.a (Stub data library, for preventing undefined symbol error)
# stubdata_env = env.Clone()
# stubdata_env.Library(target="icu-stubdata", source=["source/stubdata/stubdata.c"])


# libicui18n.a library (Internationalization)
i18n_env = env.Clone()
i18n_env.Append(CPPDEFINES = ["U_I18N_IMPLEMENTATION=1"],
                CPPPATH  = ["source/i18n"])

i18n_files = ["source/i18n/ucln_in.cpp", "source/i18n/fmtable.cpp", "source/i18n/format.cpp", 
"source/i18n/msgfmt.cpp", "source/i18n/umsg.cpp", "source/i18n/numfmt.cpp", 
"source/i18n/unum.cpp", "source/i18n/decimfmt.cpp", "source/i18n/decimalformatpattern.cpp", 
"source/i18n/dcfmtsym.cpp", "source/i18n/ucurr.cpp", "source/i18n/digitlst.cpp", 
"source/i18n/fmtable_cnv.cpp", "source/i18n/choicfmt.cpp", "source/i18n/datefmt.cpp", 
"source/i18n/smpdtfmt.cpp", "source/i18n/reldtfmt.cpp", "source/i18n/dtfmtsym.cpp", 
"source/i18n/udat.cpp", "source/i18n/dtptngen.cpp", "source/i18n/udatpg.cpp", 
"source/i18n/nfrs.cpp", "source/i18n/nfrule.cpp", "source/i18n/nfsubs.cpp", 
"source/i18n/rbnf.cpp", "source/i18n/numsys.cpp", "source/i18n/unumsys.cpp", 
"source/i18n/ucsdet.cpp", "source/i18n/ucal.cpp", "source/i18n/calendar.cpp", 
"source/i18n/gregocal.cpp", "source/i18n/timezone.cpp", "source/i18n/simpletz.cpp", 
"source/i18n/olsontz.cpp", "source/i18n/astro.cpp", "source/i18n/taiwncal.cpp", 
"source/i18n/buddhcal.cpp", "source/i18n/persncal.cpp", "source/i18n/islamcal.cpp", 
"source/i18n/japancal.cpp", "source/i18n/gregoimp.cpp", "source/i18n/hebrwcal.cpp", 
"source/i18n/indiancal.cpp", "source/i18n/chnsecal.cpp", "source/i18n/cecal.cpp", 
"source/i18n/coptccal.cpp", "source/i18n/dangical.cpp", "source/i18n/ethpccal.cpp", 
"source/i18n/coleitr.cpp", "source/i18n/coll.cpp", "source/i18n/sortkey.cpp", 
"source/i18n/bocsu.cpp", "source/i18n/ucoleitr.cpp", "source/i18n/ucol.cpp", 
"source/i18n/ucol_res.cpp", "source/i18n/ucol_sit.cpp", "source/i18n/collation.cpp", 
"source/i18n/collationsettings.cpp", "source/i18n/collationdata.cpp", "source/i18n/collationtailoring.cpp", 
"source/i18n/collationdatareader.cpp", "source/i18n/collationdatawriter.cpp", "source/i18n/collationfcd.cpp", 
"source/i18n/collationiterator.cpp", "source/i18n/utf16collationiterator.cpp", "source/i18n/utf8collationiterator.cpp", 
"source/i18n/uitercollationiterator.cpp", "source/i18n/collationsets.cpp", "source/i18n/collationcompare.cpp", 
"source/i18n/collationfastlatin.cpp", "source/i18n/collationkeys.cpp", "source/i18n/rulebasedcollator.cpp", 
"source/i18n/collationroot.cpp", "source/i18n/collationrootelements.cpp", "source/i18n/collationdatabuilder.cpp", 
"source/i18n/collationweights.cpp", "source/i18n/collationruleparser.cpp", "source/i18n/collationbuilder.cpp", 
"source/i18n/collationfastlatinbuilder.cpp", "source/i18n/strmatch.cpp", "source/i18n/usearch.cpp", 
"source/i18n/search.cpp", "source/i18n/stsearch.cpp", "source/i18n/translit.cpp", 
"source/i18n/utrans.cpp", "source/i18n/esctrn.cpp", "source/i18n/unesctrn.cpp", 
"source/i18n/funcrepl.cpp", "source/i18n/strrepl.cpp", "source/i18n/tridpars.cpp", 
"source/i18n/cpdtrans.cpp", "source/i18n/rbt.cpp", "source/i18n/rbt_data.cpp", 
"source/i18n/rbt_pars.cpp", "source/i18n/rbt_rule.cpp", "source/i18n/rbt_set.cpp", 
"source/i18n/nultrans.cpp", "source/i18n/remtrans.cpp", "source/i18n/casetrn.cpp", 
"source/i18n/titletrn.cpp", "source/i18n/tolowtrn.cpp", "source/i18n/toupptrn.cpp", 
"source/i18n/anytrans.cpp", "source/i18n/name2uni.cpp", "source/i18n/uni2name.cpp", 
"source/i18n/nortrans.cpp", "source/i18n/quant.cpp", "source/i18n/transreg.cpp", 
"source/i18n/brktrans.cpp", "source/i18n/regexcmp.cpp", "source/i18n/rematch.cpp", 
"source/i18n/repattrn.cpp", "source/i18n/regexst.cpp", "source/i18n/regextxt.cpp", 
"source/i18n/regeximp.cpp", "source/i18n/uregex.cpp", "source/i18n/uregexc.cpp", 
"source/i18n/ulocdata.c", "source/i18n/measfmt.cpp", "source/i18n/currfmt.cpp", 
"source/i18n/curramt.cpp", "source/i18n/currunit.cpp", "source/i18n/measure.cpp", 
"source/i18n/utmscale.c", "source/i18n/csdetect.cpp", "source/i18n/csmatch.cpp", 
"source/i18n/csr2022.cpp", "source/i18n/csrecog.cpp", "source/i18n/csrmbcs.cpp", 
"source/i18n/csrsbcs.cpp", "source/i18n/csrucode.cpp", "source/i18n/csrutf8.cpp", 
"source/i18n/inputext.cpp", "source/i18n/wintzimpl.cpp", "source/i18n/windtfmt.cpp", 
"source/i18n/winnmfmt.cpp", "source/i18n/basictz.cpp", "source/i18n/dtrule.cpp", 
"source/i18n/rbtz.cpp", "source/i18n/tzrule.cpp", "source/i18n/tztrans.cpp", 
"source/i18n/vtzone.cpp", "source/i18n/zonemeta.cpp", "source/i18n/upluralrules.cpp", 
"source/i18n/plurrule.cpp", "source/i18n/plurfmt.cpp", "source/i18n/selfmt.cpp", 
"source/i18n/dtitvfmt.cpp", "source/i18n/dtitvinf.cpp", "source/i18n/udateintervalformat.cpp", 
"source/i18n/tmunit.cpp", "source/i18n/tmutamt.cpp", "source/i18n/tmutfmt.cpp", 
"source/i18n/currpinf.cpp", "source/i18n/uspoof.cpp", "source/i18n/uspoof_impl.cpp", 
"source/i18n/uspoof_build.cpp", "source/i18n/uspoof_conf.cpp", "source/i18n/uspoof_wsconf.cpp", 
"source/i18n/decfmtst.cpp", "source/i18n/smpdtfst.cpp", "source/i18n/ztrans.cpp", 
"source/i18n/zrule.cpp", "source/i18n/vzone.cpp", "source/i18n/fphdlimp.cpp", 
"source/i18n/fpositer.cpp", "source/i18n/ufieldpositer.cpp", "source/i18n/locdspnm.cpp", 
"source/i18n/decNumber.c", "source/i18n/decContext.c", "source/i18n/alphaindex.cpp", 
"source/i18n/tznames.cpp", "source/i18n/tznames_impl.cpp", "source/i18n/tzgnames.cpp", 
"source/i18n/tzfmt.cpp", "source/i18n/compactdecimalformat.cpp", "source/i18n/gender.cpp", 
"source/i18n/region.cpp", "source/i18n/scriptset.cpp", "source/i18n/identifier_info.cpp", 
"source/i18n/uregion.cpp", "source/i18n/reldatefmt.cpp", "source/i18n/quantityformatter.cpp", 
"source/i18n/measunit.cpp", "source/i18n/filteredbrk.cpp", "source/i18n/sharedbreakiterator.cpp", 
"source/i18n/scientificnumberformatter.cpp"]

i18n_env.Library(target="icu-i18n",
                 source=i18n_files)


# libicuio.a library (Ustdio/Uiostream)
io_env = env.Clone()
io_env.Append(CPPDEFINES = ["U_IO_IMPLEMENTATION=1"],
                CPPPATH  = ["source/io", "source/i18n"])

io_files = [ "source/io/locbund.cpp",
             "source/io/ufile.c",
             "source/io/ufmt_cmn.c",
             "source/io/uprintf.cpp",
             "source/io/uprntf_p.c",
             "source/io/uscanf.c",
             "source/io/uscanf_p.c",
             "source/io/ustdio.c",
             "source/io/sprintf.c",
             "source/io/sscanf.c",
             "source/io/ustream.cpp",
             "source/io/ucln_io.cpp"]

io_env.Library(target="icu-io", 
               source=io_files)